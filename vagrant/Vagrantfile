# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$scriptsWithSudo = <<SCRIPT
  echo 'Generating private/public key pair'
  sudo -Hu vagrant ssh-keygen -q -f /home/vagrant/.ssh/id_rsa -t rsa -N ''
  sudo -Hu vagrant cp /home/vagrant/.ssh/id_rsa /home/vagrant/ansible_private_key
  sudo -Hu vagrant cp /home/vagrant/.ssh/id_rsa.pub /home/vagrant/ansible_public_key
  chown vagrant:vagrant /home/vagrant/ansible_private_key
  sudo -Hu vagrant chmod go= /home/vagrant/ansible_private_key
  sudo -Hu vagrant bash -c 'cat /home/vagrant/ansible_public_key >> /home/vagrant/.ssh/authorized_keys'
  sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Canada/Pacific /etc/localtime
  sudo sed -i -- 's/PasswordAuthentication no/#PasswordAuthentication no/g' /etc/ssh/sshd_config
  sudo sed -i -- 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "centos/7"
  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.cpus = 2
  end

  config.ssh.insert_key = true

  config.vm.hostname = "cmdb-dev"
  config.vm.synced_folder '.', '/vagrant'
  config.vm.network 'private_network', ip: '192.168.33.10'
  config.vm.network "forwarded_port", guest: 8080, host: 8180

  config.vm.provision "shell", inline: $scriptsWithSudo



  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "playbook.yml"
    ansible.inventory_path = 'hosts'
    ansible.limit = 'all'
    ansible.verbose        = true
    ansible.install        = true
  end
end